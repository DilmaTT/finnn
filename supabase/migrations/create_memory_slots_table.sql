/*
      # Create memory_slots table

      This table stores user-specific memory slots for saving and recalling application states,
      such as poker hand ranges or training configurations.

      1. New Tables
        - `memory_slots`
          - `id` (bigint, primary key, generated)
          - `user_id` (uuid, foreign key to `auth.users`)
          - `slot_index` (integer, 0-4, part of unique key with user_id)
          - `name` (text, default 'Пустой слот')
          - `data` (jsonb, nullable)
          - `created_at` (timestamptz)
          - `updated_at` (timestamptz)

      2. Constraints &amp; Indexes
        - A unique constraint on `(user_id, slot_index)` to ensure each user has only one slot per index.
        - A check constraint on `slot_index` to limit it to values between 0 and 4.

      3. Triggers
        - `on_memory_slots_updated`: A trigger that calls `handle_updated_at()` to update the `updated_at` timestamp on each update.

      4. Security
        - Enable RLS on `memory_slots` table.
        - Add a policy for users to manage their own data (select, insert, update, delete).
    */

    -- Create the table to store user memory slots
    CREATE TABLE IF NOT EXISTS public.memory_slots (
      id bigint generated by default as identity primary key,
      user_id uuid references auth.users(id) on delete cascade not null,
      slot_index integer not null,
      name text default 'Пустой слот',
      data jsonb,
      created_at timestamptz default now() not null,
      updated_at timestamptz default now() not null,
      constraint slot_index_check check (slot_index >= 0 and slot_index <= 4),
      constraint user_slot_unique unique (user_id, slot_index)
    );

    -- Create a trigger to execute the handle_updated_at function before any update on the memory_slots table
    -- The function handle_updated_at() is assumed to exist from a previous migration.
    DROP TRIGGER IF EXISTS on_memory_slots_updated ON public.memory_slots;
    CREATE TRIGGER on_memory_slots_updated
      BEFORE UPDATE ON public.memory_slots
      FOR EACH ROW
      EXECUTE PROCEDURE public.handle_updated_at();

    -- Enable Row Level Security on the table
    ALTER TABLE public.memory_slots ENABLE ROW LEVEL SECURITY;

    -- Create policies for RLS
    DROP POLICY IF EXISTS "Allow users to manage their own memory slots" ON public.memory_slots;
    CREATE POLICY "Allow users to manage their own memory slots"
      ON public.memory_slots
      FOR ALL
      TO authenticated
      USING (auth.uid() = user_id)
      WITH CHECK (auth.uid() = user_id);
